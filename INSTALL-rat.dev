

For developers:  (Radio Astro Tools (RAT); see opt/README)

To grab the git based source code of ADMIT

  git clone https://github.com/teuben/admit.git
  cd admit
  git checkout rat

The "rat" branch is important, otherwise you get the 1.0.4 trunk that requires CASA.


There are some automated scripts in  $ADMIT/scripts/ that you can tailor for installation

  make config                      (it needs $CASA_ROOT if you want to include that CASA via ADMIT)
  source admit_start.csh           (or the .sh variant if your shell is not a csh variant)

A few simple tests:

  make python0              (should work without casa)
  make python1   	    (needs CASA in the environment) - can hang on a mac?  try 'make python2'

This last test is important, it will verify if you have properly
integrated RAT in your shell.

Miniconda example:
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
    bash Miniconda2-latest-Linux-x86_64.sh
    export PATH=$HOME/miniconda2/bin:$PATH
    conda install ipython numpy scipy matplotlib notebook astropy



RAT requirements:
    Without RAT (radio astro tools) you can currently do very little with ADMIT. 
    See http://radio-astro-tools.github.io/

    pip install astropy  aplpy  spectral-cube

    the other modules have to be done manually:

    pip install https://github.com/radio-astro-tools/radio_beam/archive/master.zip
    pip install https://github.com/radio-astro-tools/signal-id/archive/master.zip
    pip install https://github.com/radio-astro-tools/pvextractor/archive/master.zip
    pip install https://github.com/radio-astro-tools/statcont/archive/master.zip

Programs you will need: (apart from the obvious things like python etc.)

		         package names
    program       ubuntu                redhat
    -----------   -------------------   --------------------
    autoconf      autoconf              autoconf
    csh           tcsh                  tcsh
    pdflatex      texlive-latex-base
    dot           graphviz
		  libgraphviz-dev
    dia           dia
    fig2dev       transfig
    sphinx-build  python-sphinx         python-sphinx
                  python-numpydoc       python-numpydoc
    convert       imagemagick           ImageMagick

If you want to use the non-CASA tests, you will also need

    python        python                python
    ipython       ipython               ipython
    pip           python-pip
    matplotlib    python-matplotlib     python-matplotlib
    numpy         python-numpy          numpy
    scipy         python-scipy          scipy

Other recommended packages are:

    pylint        pylint                pylint


Reminder on package installation methods in a few Linux and Mac distro's:

ubuntu:    apt-get install <package>
redhat:    yum install <package>
fedora22:  dnf install <package>
openSUSE:  zypper install <package>

macports:  port install <package>        (see also /opt/local/...)
homebrew:  brew install <package>        (see also /usr/local/Cellar)


Some known peculiar situations
------------------------------

fedora22: it needs libpng12

Sample installation
-------------------

  Sample scripts:
  $ADMIT/scripts/get_stable-casa_admit             install both casa and admit, only for linux

# 

git clone https://github.com/teuben/admit.git
cd admit
git checkout rat
autoconfig
./configure 
source admit_start.csh   (or the .sh variant)

# unit tests (these are pure python tests, and not essential for ALMA)
make unit0

# unit tests (will need CASA in your environment)
make unit

# integratation tests (will need CASA)
make integration

# a DATA test (will need CASA)
make foobar
cd data
../admit/test/admit1.py foobar.fits x

# a new DTD should not leave modified or new files
# we need CASA for this
cd $ADMIT
make dtd
git status





How a developer needs to set up sphinx in their version of casa's python:
=========================================================================
cd $ADMIT/integration-test
make pip                         (fails on FC22, try the old 'make pip1')
rehash                           (if you're in a csh type shell)
which pip                        (should now see the casa version)
pip install --upgrade pip
rehash
pip install --upgrade setuptools
pip install sphinx               (can have zlib error, install docutils manually)
pip install numpydoc
rehash
which sphinx-build               (should see the casa version now)
cd ..    
make html
make pdf

The installation of sphinx is known to fail on some systems (e.g. redhat/SL),
which was due to a failing docutils install in a compression library.
The solution here was to manually install docutils,
from http://docutils.sourceforge.net/

Example
    tar zxf docutils-0.12.tar.gz
    cd docutils-0.12
    python setup.py install
or try the latest
    svn checkout svn://svn.code.sf.net/p/docutils/code/trunk docutils-code
    cd docutils-code/docutils
    python setup.py install
    
after which the pip install should work again.

Some rumors exist that the system version of sphinx-build may work on your
system, but it's very easy to get shared libraries of cblas (which numpy
uses) to trigger error messages if you use a sphinx not built with casa's
python.   YMMV.


N6503 Test case (test6503.fits):
================================

#!/usr/bin/env casarun
#---------------------------------------------------------------------------------------
import admit
loglevel = 10            # 10=DEBUG, 15=TIMING 20=INFO 30=WARNING 40=ERROR 50=FATAL

p   = admit.Project('test6503.admit', loglevel=loglevel)
t0  = p.addtask(admit.Ingest_AT(alias='x', file='test6503.fits'))    
t1  = p.addtask(admit.CubeStats_AT(ppp=True), ['x'])
p.run()
#---------------------------------------------------------------------------------------

CASA::
TIMING : Ingest END [ 1.516961    2.07917786]
TIMING : CubeStats END [ 5.605253    5.72041416]
TIMING : ADMITrun END [ 7.409753    8.18327498]
REGRESSION : CST: 0.000594 1.248745

RAT::
TIMING : Ingest END [ 0.012393    0.01637793]
TIMING : CubeStats END [ 5.53455     5.54279399]
TIMING : ADMITrun END [ 5.660818    5.72585487]
REGRESSION : CST: 0.000594 1.246197



EGC test data:
=============

ftp://ftp.astro.umd.edu/pub/teuben/