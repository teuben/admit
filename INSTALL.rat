

ADMIT with rat (Radio Astro Tools)
----------------------------------


For developers: 

To grab the git based source code

  git clone https://github.com/teuben/admit.git

and use branch 'rat':

    cd admit
    git checkout rat

there is no CASA needed.  You will need a python (both 2 and 3 are supported)
with a number of packages (see below)



There is the following option to support casa:


https://github.com/casacore/ =>
   https://github.com/casacore/casacore
   https://github.com/casacore/python-casacore





Here is an example to install a fresh (miniconda2) python, with astropy, casacore etc.

wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
bash Miniconda2-latest-Linux-x86_64.sh
   -> select your new location for miniconda2's root 
   export PATH="/data2/teuben/miniconda2/bin:$PATH"
export PATH=/data2/teuben/miniconda2/bin:$PATH

conda install ipython numpy scipy matplotlib notebook astropy numpydoc sphinx

lets say miniconda2 is now in:   /data2/teuben/miniconda2


git clone https://github.com/casacore/casacore
git clone https://github.com/casacore/python-casacore


mkcd casacore/build
cmake -DBUILD_PYTHON=ON -DPYTHON2_LIBRARY=/data2/teuben/miniconda2/lib -DCMAKE_INSTALL_PREFIX=/data2/teuben/miniconda2 ..
make
 -> this step can take long (88' on my laptop)
make install

cd ../../python-casacore
python setup.py install


now to test do this in some clean directory where there is no casacore to confuse python
  cd /tmp
  python -c 'import casacore'

#

























git clone ....
cd admit
autoconfig
./configure --with-casa-root=/astromake/opt/casa/stable
source admit_start.csh

# unit tests (these are pure python tests, and not essential for ALMA)
make unit0



# a new DTD should not leave modified or new files
# we need CASA for this
cd $ADMIT
make dtd
git status





How a developer needs to set up sphinx in their version of casa's python:
=========================================================================
cd $ADMIT/integration-test
make pip                         (fails on FC22, try the old 'make pip1')
rehash                           (if you're in a csh type shell)
which pip                        (should now see the casa version)
pip install --upgrade pip
rehash
pip install --upgrade setuptools
pip install sphinx               (can have zlib error, install docutils manually)
pip install numpydoc
rehash
which sphinx-build               (should see the casa version now)
cd ..    
make html
make pdf

The installation of sphinx is known to fail on some systems (e.g. redhat/SL),
which was due to a failing docutils install in a compression library.
The solution here was to manually install docutils,
from http://docutils.sourceforge.net/

Example
    tar zxf docutils-0.12.tar.gz
    cd docutils-0.12
    python setup.py install
or try the latest
    svn checkout svn://svn.code.sf.net/p/docutils/code/trunk docutils-code
    cd docutils-code/docutils
    python setup.py install
    
after which the pip install should work again.

Some rumors exist that the system version of sphinx-build may work on your
system, but it's very easy to get shared libraries of cblas (which numpy
uses) to trigger error messages if you use a sphinx not built with casa's
python.   YMMV.


Some notes on CASA installations
================================
